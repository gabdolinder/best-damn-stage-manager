services:
  traefik:
    container_name: traefik
    image: traefik:v3.1.0
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - letsencrypt:/letsencrypt
      - ./userfiles/webbusers:/webbusers
      - ./userfiles/adminusers:/adminusers
    command:
      - --api.dashboard=true
      - --log.level=INFO
      - --accesslog=true
      - --providers.docker=true
      - --providers.docker.exposedByDefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http.tls.certresolver=myresolver
      - --certificatesresolvers.myresolver.acme.email=${TR_EMAIL}
      - --certificatesresolvers.myresolver.acme.tlschallenge=true
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
    labels:
      - traefik.enable=true
      - traefik.http.routers.mydashboard.rule=Host(`traefik.${TR_DOMAIN_NAME}`)
      - traefik.http.routers.mydashboard.service=api@internal
      - traefik.http.routers.mydashboard.middlewares=myauth
      - traefik.http.middlewares.myauth.digestauth.usersfile=./adminusers

  bdsm:
    container_name: bdsm
    build:
      context: .
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=${DATABASE_URL}
    labels:
      - traefik.enable=true
      - traefik.http.routers.bdsm.entrypoints=web
      - traefik.http.routers.bdsm.rule=Host(`${TR_DOMAIN_NAME}`) || Host(`www.${TR_DOMAIN_NAME}`)
      - traefik.http.routers.bdsm.middlewares=user-auth
      - traefik.http.middlewares.bdsm-https-redir.redirectscheme.scheme=https
      - traefik.http.routers.bdsm-secure.entrypoints=websecure
      - traefik.http.routers.bdsm-secure.rule=Host(`${TR_DOMAIN_NAME}`) || Host(`www.${TR_DOMAIN_NAME}`)
      - traefik.http.routers.bdsm-secure.middlewares=user-auth
      - traefik.http.middlewares.user-auth.digestauth.usersfile=./webbusers
      - traefik.http.routers.bdsm-docs.entrypoints=websecure
      - traefik.http.routers.bdsm-docs.rule=Host(`${TR_DOMAIN_NAME}`) && PathPrefix('/docs')
      - traefik.http.routers.bdsm-docs.middlewares=admin-auth
      - traefik.http.middlewares.admin-auth.digestauth.usersfile=./adminusers
      - traefik.http.services.bdsm.loadbalancer.server.port=8000
    volumes:
      - ./app:/app


  db:
    container_name: ${POSTGRES_CONTAINER_NAME}
    image: postgres:16.3
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PW}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - database-data:/var/lib/postgresql/data
    expose:
      - "5432"
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  bdsm-migrate:
    container_name: bdsm-migrate
    build: .
    command: chmod -R 755 /alembic
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
    environment:
      - ALEMBIC_DATABASE_URL=${ALEMBIC_DATABASE_URL}
      - DATABASE_URL=${DATABASE_URL}

volumes:
  letsencrypt:
    name: letsencrypt
  database-data:
    name: database-data
